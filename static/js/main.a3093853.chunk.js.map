{"version":3,"sources":["assets/merton.jpg","assets/wall.png","assets/amphi.jpg","assets/castle.jpg","assets/river-dee.jpg","assets/location-images/guilden-sutton.png","assets/location-images/merton-house.jpg","assets/location-images/atlantic-pool.jpg","assets/location-images/chester-cathedral.jpg","assets/location-images/chester-city-centre.png","assets/location-images/cheshire-oaks.jpeg","Modal.js","Data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Modal","this","props","show","react_default","a","createElement","className","style","position","top","bottom","left","right","backgroundColor","padding","zIndex","borderRadius","maxWidth","height","margin","textAlign","overflow","float","lineHeight","children","React","Component","data","name","imgUrl","require","content","Header","href","rel","target","src","river","alt","wall","amphi","castle","Merton","ModalContent","GridItem","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleModal","setState","isOpen","state","onClick","src_Modal","onClose","App_ModalContent","PlaceGrid","gridItems","gridItemData","i","length","push","App_GridItem","key","App","App_Header","App_PlaceGrid","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+GCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kLCiEzBC,mLA3DX,IAAIC,KAAKC,MAAMC,KACb,OAAO,KAiCT,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,MA9BN,CACpBC,SAAU,QACVC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,gBAAiB,kBACjBC,QAAS,GACTC,OAAQ,IAuBNZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQC,MAnBR,CACjBM,gBAAiB,OACjBG,aAAc,EACdC,SAAU,IACVC,OAAQ,IACRC,OAAQ,SACRC,UAAW,OACXC,SAAU,WAaRlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQC,MATR,CACjBe,MAAO,QACPR,QAAS,MACTS,WAAY,QAMV,KAGGvB,KAAKC,MAAMuB,kBA3CFC,IAAMC,WC8BTC,EAjCN,CACP,CACEC,KAAQ,iBACRC,OAAUC,EAAQ,IAClBC,QAAW,aAEb,CACEH,KAAQ,eACRC,OAAUC,EAAQ,IAClBC,QAAW,aAEb,CACEH,KAAQ,qBACRC,OAAUC,EAAQ,IAClBC,QAAW,aAEb,CACEH,KAAQ,oBACRC,OAAUC,EAAQ,IAClBC,QAAW,aAEb,CACEH,KAAQ,cACRC,OAAUC,EAAQ,IAClBC,QAAW,aAEb,CACEH,KAAQ,gBACRC,OAAUC,EAAQ,IAClBC,QAAW,iGClBXC,0LAEF,OACE7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,oBAEEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,oBAIFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,0HAEyCH,EAAAC,EAAAC,cAAA,KAAG4B,KAAK,6CAA6CC,IAAI,sBAAsBC,OAAO,UAAtF,gBAFzC,yKAIEhC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAK+B,IAAKC,IAAOC,IAAI,cACrBnC,EAAAC,EAAAC,cAAA,OAAK+B,IAAKG,IAAMD,IAAI,gCACpBnC,EAAAC,EAAAC,cAAA,OAAK+B,IAAKI,IAAOF,IAAI,8BACrBnC,EAAAC,EAAAC,cAAA,OAAK+B,IAAKK,IAAQH,IAAI,oBAE1BnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,wCADF,2OAGEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAK+B,IAAKM,IAAQJ,IAAI,kCAzBfZ,cAkCfiB,mLAEF,OACExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeN,KAAKC,MAAM2B,OAE3C5B,KAAKC,MAAM8B,gBAPOL,aAarBkB,cACJ,SAAAA,EAAY3C,GACZ,IAAA4C,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9C,KAAA4C,IACEC,EAAAC,OAAAE,EAAA,EAAAF,CAAA9C,KAAA8C,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAlD,KAAMC,KASRkD,YAAc,WACZN,EAAKO,SAAS,CACZC,QAASR,EAAKS,MAAMD,UAVtBR,EAAKS,MAAQ,CACX1B,KAAM,KACNC,OAAQ,KACRE,QAAS,KACTsB,QAAQ,GANZR,wEAiBE,OAEE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYiD,QAASvD,KAAKmD,aACvChD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAa8B,IAAKpC,KAAKC,MAAM4B,OAAQS,IAAKtC,KAAKC,MAAM2B,OACpEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACZN,KAAKC,MAAM2B,MAEdzB,EAAAC,EAAAC,cAACmD,EAAD,CAAOtD,KAAMF,KAAKsD,MAAMD,OACtBI,QAASzD,KAAKmD,aACdhD,EAAAC,EAAAC,cAACqD,EAAD,CACE9B,KAAM5B,KAAKC,MAAM2B,KACjBC,OAAQ7B,KAAKC,MAAM4B,OACnBE,QAAS/B,KAAKC,MAAM8B,mBA/BTL,aAuCjBiC,mLAKF,IAHA,IAAIC,EAAY,GACZC,EAAelC,EAEVmC,EAAI,EAAGA,EAAID,EAAaE,OAAQD,IACvCF,EAAUI,KACR7D,EAAAC,EAAAC,cAAC4D,EAAD,CACErC,KAAMiC,EAAaC,GAAGlC,KACtBC,OAAQgC,EAAaC,GAAGjC,OACxBE,QAAS8B,EAAaC,GAAG/B,QACzBmC,IAAKJ,KAKX,OACE3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,aACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZsD,WApBalC,aAuCTyC,mLATX,OACEhE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+D,EAAD,MACAjE,EAAAC,EAAAC,cAACgE,EAAD,cANU3C,aChHE4C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzE,EAAAC,EAAAC,cAACwE,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a3093853.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/merton.a128c36d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wall.d1d5dd8e.png\";","module.exports = __webpack_public_path__ + \"static/media/amphi.aa32f834.jpg\";","module.exports = __webpack_public_path__ + \"static/media/castle.c21b347d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/river-dee.52ee8f57.jpg\";","module.exports = __webpack_public_path__ + \"static/media/guilden-sutton.c1a5f00f.png\";","module.exports = __webpack_public_path__ + \"static/media/merton-house.2dac3ed9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atlantic-pool.f6488d1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chester-cathedral.0556e138.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chester-city-centre.ea72fbad.png\";","module.exports = __webpack_public_path__ + \"static/media/cheshire-oaks.4808070a.jpeg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Modal extends React.Component {\n  render() {\n    // Render nothing if the \"show\" prop is false\n    if(!this.props.show) {\n      return null;\n    }\n\n    // The gray background\n    const backdropStyle = {\n      position: 'fixed',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50,\n      zIndex: 1\n    };\n\n    // The modal \"window\"\n    const modalStyle = {\n      backgroundColor: '#fff',\n      borderRadius: 5,\n      maxWidth: 800,\n      height: 500,\n      margin: '0 auto',\n      textAlign: 'left', \n      overflow: 'hidden'\n    };\n\n    // close button \n    const closeStyle = {\n      float: 'right', \n      padding: '8px',\n      lineHeight: '8px'\n    }\n\n    return (\n      <div className=\"backdrop\" style={backdropStyle}>\n        <div className=\"modal\" style={modalStyle}>\n        <div className=\"close\" style={closeStyle}>\n          x\n        </div>\n          {this.props.children}\n\n          {/*<div className=\"footer\">\n            <button onClick={this.props.onClose}>\n              Close\n            </button>\n    </div>*/}\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool,\n  children: PropTypes.node\n};\n\nexport default Modal;","var data = [\n    {\n      \"name\": \"Guilden Sutton\",\n      \"imgUrl\": require(\"./assets/location-images/guilden-sutton.png\"),\n      \"content\": \"test data\"\n    }, \n    {\n      \"name\": \"Merton House\",\n      \"imgUrl\": require(\"./assets/location-images/merton-house.jpg\"), \n      \"content\": \"test data\"\n    },\n    {\n      \"name\": \"Chester City Baths\",\n      \"imgUrl\": require(\"./assets/location-images/atlantic-pool.jpg\"),\n      \"content\": \"test data\"\n    },\n    {\n      \"name\": \"Chester Cathedral\",\n      \"imgUrl\": require(\"./assets/location-images/chester-cathedral.jpg\"),\n      \"content\": \"test data\"\n    }, \n    {\n      \"name\": \"City Centre\",\n      \"imgUrl\": require(\"./assets/location-images/chester-city-centre.png\"),\n      \"content\": \"test data\"\n    }, \n    {\n      \"name\": \"Cheshire Oaks\",\n      \"imgUrl\": require(\"./assets/location-images/cheshire-oaks.jpeg\"),\n      \"content\": \"test data\"\n    }\n  ];\n\n  export default data;","import React, { Component } from 'react';\nimport Modal from './Modal';\nimport data from './Data';\nimport Merton from './assets/merton.jpg';\nimport wall from './assets/wall.png';\nimport amphi from './assets/amphi.jpg';\nimport castle from './assets/castle.jpg';\nimport river from './assets/river-dee.jpg';\nimport './css/App.css';\n\n\nclass Header extends Component {\n  render () {\n    return(\n      <div className=\"header-area\">\n        <div className=\"main-header\">\n          Chester, Cheshire\n          <div className=\"subtitle\"> \n            Through my eyes\n          </div>\n        </div>\n        <div className=\"description\">\n          Chester is a beautiful city on the River Dee in the north-west of England, U.K. \n          The city was originally the Roman fort <a href=\"https://en.wikipedia.org/wiki/Deva_Victrix\" rel=\"noopener noreferrer\" target=\"_blank\">Deva Victrix</a> and later became a settlement. It has a well-preserved wall surrounding the city centre, \n          a Roman amphitheater as well as its own castle close to the border of Wales. \n          <br/>\n          <div className=\"description-images\">\n              <img src={river} alt=\"River Dee\"/>\n              <img src={wall} alt=\"Chester City Wall at Sunset\"/>\n              <img src={amphi} alt=\"Chester City Amphitheatre\"/>\n              <img src={castle} alt=\"Chester Castle\"/>\n            </div>\n          <div className=\"sub-section\">\n            <h1>What this city means to me</h1>\n            I lived here for 3 years (2001-2004). It was filled with lots of travel, life-changing experiences and fond memories. The city has a vibrant history which you can see yourself through all the Roman, Tudor and Victorian architecture. \n            <div className=\"description-images\">\n              <img src={Merton} alt=\"Merton House Class\"/>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass ModalContent extends Component {\n  render() {\n    return (\n      <div className=\"modal-content\">\n        <div className=\"header\">\n          <span className=\"header-name\">{this.props.name}</span> \n        </div>\n        {this.props.content}\n      </div>\n    );\n  }\n}\n\nclass GridItem extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      name: null, \n      imgUrl: null,\n      content: null,\n      isOpen: false\n    }\n  }\n\n  toggleModal = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render () {\n    return(\n      // this is the squares in the grid that you see which have the names of the places\n      <div className=\"grid-item\" onClick={this.toggleModal}>\n        <img className=\"background\" src={this.props.imgUrl} alt={this.props.name} />\n        <div className=\"location\">\n          {this.props.name}\n        </div>\n        <Modal show={this.state.isOpen}\n          onClose={this.toggleModal}>\n          <ModalContent \n            name={this.props.name} \n            imgUrl={this.props.imgUrl} \n            content={this.props.content}>\n          </ModalContent>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nclass PlaceGrid extends Component {\n  render () {\n    let gridItems = [];\n    let gridItemData = data;\n\n    for (var i = 0; i < gridItemData.length; i++) {\n      gridItems.push(\n        <GridItem \n          name={gridItemData[i].name} \n          imgUrl={gridItemData[i].imgUrl}\n          content={gridItemData[i].content} \n          key={i}\n        />);\n    }\n\n\n    return(\n      <div className=\"place-grid\">\n        <h1 className=\"grid-header\">My Places</h1>\n        <div className=\"grid\">\n          {gridItems}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass App extends Component {\n\n  render() {\n    return(\n      <div>\n        <Header /> \n        <PlaceGrid /> \n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}