{"map":"{\"version\":3,\"sources\":[\"/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/src/assets/guilden-sutton.png\",\"/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/src/assets/chester-cathedral.jpg\",\"/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/src/assets/chester-city-centre.png\",\"/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/src/assets/cheshire-oaks.jpeg\",\"/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/src/assets/atlantic-pool.jpg\",\"/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/src/assets/merton-house.jpg\",\"/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/src/App.js\",\"/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/src/serviceWorker.js\",\"/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Header\",\"react_default\",\"a\",\"createElement\",\"className\",\"Component\",\"GridItem\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"name\",\"imgUrl\",\"content\",\"onClick\",\"alert\",\"src\",\"alt\",\"PlaceGrid\",\"require\",\"gridItems\",\"gridItemData\",\"getData\",\"i\",\"length\",\"push\",\"App_GridItem\",\"key\",\"App\",\"App_Header\",\"App_PlaceGrid\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"4JAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6JCIlCC,0LAEF,OACEC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,UAAf,oBAEEH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,YAAf,2BALaC,EAAAA,YAafC,cACJ,SAAAA,EAAYC,GACZ,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACEE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,KAAM,KACNC,OAAQ,KACRC,QAAS,MALbV,wEAUE,OAEEP,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,YAAYe,QAAS,WAAA,OAAMC,MAAM,aAC9CnB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,aAAaiB,IAAKV,KAAKJ,MAAMU,OAAQK,IAAKX,KAAKJ,MAAMS,OACpEf,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,YACZO,KAAKJ,MAAMS,cAjBCX,EAAAA,WA2BjBkB,oLAmCF,MAjCW,CACT,CACEP,KAAQ,iBACRC,OAAUO,EAAQ,IAClBN,QAAW,aAEb,CACEF,KAAQ,oBACRC,OAAUO,EAAQ,IAClBN,QAAW,aAEb,CACEF,KAAQ,cACRC,OAAUO,EAAQ,IAClBN,QAAW,aAEb,CACEF,KAAQ,gBACRC,OAAUO,EAAQ,IAClBN,QAAW,aAEb,CACEF,KAAQ,qBACRC,OAAUO,EAAQ,IAClBN,QAAW,aAEb,CACEF,KAAQ,eACRC,OAAUO,EAAQ,IAClBN,QAAW,+CAWf,IAHA,IAAIO,EAAY,GACZC,EAAef,KAAKgB,UAEfC,EAAI,EAAGA,EAAIF,EAAaG,OAAQD,IACvCH,EAAUK,KACR7B,EAAAC,EAAAC,cAAC4B,EAAD,CACEf,KAAMU,EAAaE,GAAGZ,KACtBC,OAAQS,EAAaE,GAAGX,OACxBC,QAASQ,EAAaE,GAAGV,QACzBc,IAAKJ,KAKX,OACE3B,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,QACZqB,UAvDepB,EAAAA,WAyET4B,mLATX,OACEhC,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAC+B,EAAD,MACAjC,EAAAC,EAAAC,cAACgC,EAAD,cANU9B,EAAAA,WC7FE+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/guilden-sutton.c1a5f00f.png\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/chester-cathedral.0556e138.jpg\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/chester-city-centre.ea72fbad.png\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/cheshire-oaks.4808070a.jpeg\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/atlantic-pool.f6488d1e.jpg\\\";\",\"module.exports = __webpack_public_path__ + \\\"static/media/merton-house.2dac3ed9.jpg\\\";\",\"import React, { Component } from 'react';\\nimport './App.css';\\n\\n\\nclass Header extends Component {\\n  render () {\\n    return(\\n      <div className=\\\"header\\\">\\n        Chester, Cheshire\\n        <div className=\\\"subtitle\\\"> \\n          Through my eyes\\n        </div>\\n      </div>\\n    )\\n  }\\n}\\n\\nclass GridItem extends Component {\\n  constructor(props)\\n  {\\n    super(props);\\n    this.state = {\\n      name: null, \\n      imgUrl: null,\\n      content: null\\n    }\\n  }\\n\\n  render () {\\n    return(\\n      // this is the squares in the grid that you see which have the names of the places\\n      <div className=\\\"grid-item\\\" onClick={() => alert(\\\"clicked\\\")}>\\n        <img className=\\\"background\\\" src={this.props.imgUrl} alt={this.props.name} />\\n        <div className=\\\"location\\\">\\n          {this.props.name}\\n        </div>\\n        {/*}<div className=\\\"content\\\">\\n          {this.props.content}--#\\n        </div>*/}\\n      </div>\\n    )\\n  }\\n}\\n\\nclass PlaceGrid extends Component {\\n  getData() {\\n    var data = [\\n      {\\n        \\\"name\\\": \\\"Guilden Sutton\\\",\\n        \\\"imgUrl\\\": require(\\\"./assets/guilden-sutton.png\\\"),\\n        \\\"content\\\": \\\"test data\\\"\\n      },\\n      {\\n        \\\"name\\\": \\\"Chester Cathedral\\\",\\n        \\\"imgUrl\\\": require(\\\"./assets/chester-cathedral.jpg\\\"),\\n        \\\"content\\\": \\\"test data\\\"\\n      }, \\n      {\\n        \\\"name\\\": \\\"City Centre\\\",\\n        \\\"imgUrl\\\": require(\\\"./assets/chester-city-centre.png\\\"),\\n        \\\"content\\\": \\\"test data\\\"\\n      }, \\n      {\\n        \\\"name\\\": \\\"Cheshire Oaks\\\",\\n        \\\"imgUrl\\\": require(\\\"./assets/cheshire-oaks.jpeg\\\"),\\n        \\\"content\\\": \\\"test data\\\"\\n      },\\n      {\\n        \\\"name\\\": \\\"Chester City Baths\\\",\\n        \\\"imgUrl\\\": require(\\\"./assets/atlantic-pool.jpg\\\"),\\n        \\\"content\\\": \\\"test data\\\"\\n      }, \\n      {\\n        \\\"name\\\": \\\"Merton House\\\",\\n        \\\"imgUrl\\\": require(\\\"./assets/merton-house.jpg\\\"), \\n        \\\"content\\\": \\\"test data\\\"\\n      }\\n    ];\\n\\n    return data;\\n  }\\n\\n  render () {\\n    let gridItems = [];\\n    let gridItemData = this.getData();\\n\\n    for (var i = 0; i < gridItemData.length; i++) {\\n      gridItems.push(\\n        <GridItem \\n          name={gridItemData[i].name} \\n          imgUrl={gridItemData[i].imgUrl}\\n          content={gridItemData[i].content} \\n          key={i}\\n        />);\\n    }\\n\\n\\n    return(\\n      <div className=\\\"grid\\\">\\n        {gridItems}\\n      </div>\\n    )\\n  }\\n}\\n\\nclass App extends Component {\\n\\n  render() {\\n    return(\\n      <div>\\n        <Header /> \\n        <PlaceGrid /> \\n      </div>\\n    )\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,,function(e,t,n){e.exports=n(23)},,,,,function(e,t,n){},,function(e,t,n){},,function(e,t,n){e.exports=n.p+\"static/media/guilden-sutton.c1a5f00f.png\"},function(e,t,n){e.exports=n.p+\"static/media/chester-cathedral.0556e138.jpg\"},function(e,t,n){e.exports=n.p+\"static/media/chester-city-centre.ea72fbad.png\"},function(e,t,n){e.exports=n.p+\"static/media/cheshire-oaks.4808070a.jpeg\"},function(e,t,n){e.exports=n.p+\"static/media/atlantic-pool.f6488d1e.jpg\"},function(e,t,n){e.exports=n.p+\"static/media/merton-house.2dac3ed9.jpg\"},function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),c=n(7),i=n.n(c),o=(n(13),n(1)),s=n(2),l=n(4),u=n(3),m=n(5),d=(n(15),function(e){function t(){return Object(o.a)(this,t),Object(l.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"header\"},\"Chester, Cheshire\",r.a.createElement(\"div\",{className:\"subtitle\"},\"Through my eyes\"))}}]),t}(a.Component)),h=function(e){function t(e){var n;return Object(o.a)(this,t),(n=Object(l.a)(this,Object(u.a)(t).call(this,e))).state={name:null,imgUrl:null,content:null},n}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"grid-item\",onClick:function(){return alert(\"clicked\")}},r.a.createElement(\"img\",{className:\"background\",src:this.props.imgUrl,alt:this.props.name}),r.a.createElement(\"div\",{className:\"location\"},this.props.name))}}]),t}(a.Component),p=function(e){function t(){return Object(o.a)(this,t),Object(l.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"getData\",value:function(){return[{name:\"Guilden Sutton\",imgUrl:n(17),content:\"test data\"},{name:\"Chester Cathedral\",imgUrl:n(18),content:\"test data\"},{name:\"City Centre\",imgUrl:n(19),content:\"test data\"},{name:\"Cheshire Oaks\",imgUrl:n(20),content:\"test data\"},{name:\"Chester City Baths\",imgUrl:n(21),content:\"test data\"},{name:\"Merton House\",imgUrl:n(22),content:\"test data\"}]}},{key:\"render\",value:function(){for(var e=[],t=this.getData(),n=0;n<t.length;n++)e.push(r.a.createElement(h,{name:t[n].name,imgUrl:t[n].imgUrl,content:t[n].content,key:n}));return r.a.createElement(\"div\",{className:\"grid\"},e)}}]),t}(a.Component),f=function(e){function t(){return Object(o.a)(this,t),Object(l.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(d,null),r.a.createElement(p,null))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(r.a.createElement(f,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[8,2,1]]]);","extractedComments":[]}