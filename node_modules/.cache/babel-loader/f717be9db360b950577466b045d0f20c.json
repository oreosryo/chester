{"ast":null,"code":"import _classCallCheck from \"/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/src/components/GridItem.js\";\nimport React, { Component } from 'react';\n/* modules */\n\nimport Modal from './Modal';\nimport ModalContent from './ModalContent';\n\nvar GridItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GridItem, _Component);\n\n  function GridItem(props) {\n    var _this;\n\n    _classCallCheck(this, GridItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GridItem).call(this, props));\n\n    _this.toggleModal = function () {\n      _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n    };\n\n    _this.state = {\n      name: null,\n      imgUrl: null,\n      content: null,\n      coordinates: null,\n      isOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(GridItem, [{\n    key: \"render\",\n    value: function render() {\n      var topCoordinate = this.props.coordinates[0] + '%';\n      var leftCoordinate = this.props.coordinates[1] + '%';\n      var gridItemStyle = {\n        top: topCoordinate,\n        left: leftCoordinate\n      };\n      return (// this is the squares in the grid that you see which have the names of the places\n        React.createElement(\"div\", {\n          className: \"grid-item\",\n          onClick: this.toggleModal,\n          style: gridItemStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"background\",\n          src: this.props.imgUrl,\n          alt: this.props.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"location\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, this.props.name), React.createElement(Modal, {\n          show: this.state.isOpen,\n          onClose: this.toggleModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(ModalContent, {\n          name: this.props.name,\n          imgUrl: this.props.imgUrl,\n          content: this.props.content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        })))\n      );\n    }\n  }]);\n\n  return GridItem;\n}(Component);\n\nexport default GridItem;","map":{"version":3,"sources":["/Users/advita/Google Drive/Imp/Carnegie Mellon/Classes/SSUI/chester-react-app/src/components/GridItem.js"],"names":["React","Component","Modal","ModalContent","GridItem","props","toggleModal","setState","isOpen","state","name","imgUrl","content","coordinates","topCoordinate","leftCoordinate","gridItemStyle","top","left"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EACA;AAAA;;AAAA;;AACE,kFAAMA,KAAN;;AADF,UAWAC,WAXA,GAWc,YAAM;AAClB,YAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAE,CAAC,MAAKC,KAAL,CAAWD;AADR,OAAd;AAGD,KAfD;;AAEE,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,MAAM,EAAE,IAFG;AAGXC,MAAAA,OAAO,EAAE,IAHE;AAIXC,MAAAA,WAAW,EAAE,IAJF;AAKXL,MAAAA,MAAM,EAAE;AALG,KAAb;AAFF;AASC;;;;6BAQS;AACN,UAAIM,aAAa,GAAG,KAAKT,KAAL,CAAWQ,WAAX,CAAuB,CAAvB,IAA4B,GAAhD;AACA,UAAIE,cAAc,GAAG,KAAKV,KAAL,CAAWQ,WAAX,CAAuB,CAAvB,IAA4B,GAAjD;AACA,UAAIG,aAAa,GAAG;AAChBC,QAAAA,GAAG,EAAEH,aADW;AAEhBI,QAAAA,IAAI,EAAEH;AAFU,OAApB;AAKA,aACI;AACA;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,OAAO,EAAE,KAAKT,WAAzC;AAAsD,UAAA,KAAK,EAAEU,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,GAAG,EAAE,KAAKX,KAAL,CAAWM,MAA5C;AAAoD,UAAA,GAAG,EAAE,KAAKN,KAAL,CAAWK,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,EAEA;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKL,KAAL,CAAWK,IADhB,CAFA,EAKA,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAE,KAAKD,KAAL,CAAWD,MAAxB;AACI,UAAA,OAAO,EAAE,KAAKF,WADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI,oBAAC,YAAD;AACA,UAAA,IAAI,EAAE,KAAKD,KAAL,CAAWK,IADjB;AAEA,UAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MAFnB;AAGA,UAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CALA;AAFJ;AAiBH;;;;EA5CkBX,S;;AA+CrB,eAAeG,QAAf","sourcesContent":["import React, { Component } from 'react';\n\n/* modules */\nimport Modal from './Modal'\nimport ModalContent from './ModalContent';\n\nclass GridItem extends Component {\n    constructor(props)\n    {\n      super(props);\n      this.state = {\n        name: null, \n        imgUrl: null,\n        content: null,\n        coordinates: null,\n        isOpen: false\n      }\n    }\n  \n    toggleModal = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  \n    render () {\n        let topCoordinate = this.props.coordinates[0] + '%';\n        let leftCoordinate = this.props.coordinates[1] + '%';\n        var gridItemStyle = {\n            top: topCoordinate,\n            left: leftCoordinate\n        }\n        \n        return(\n            // this is the squares in the grid that you see which have the names of the places\n            <div className=\"grid-item\" onClick={this.toggleModal} style={gridItemStyle}>\n            <img className=\"background\" src={this.props.imgUrl} alt={this.props.name} />\n            <div className=\"location\">\n                {this.props.name}\n            </div>\n            <Modal show={this.state.isOpen}\n                onClose={this.toggleModal}>\n                <ModalContent \n                name={this.props.name} \n                imgUrl={this.props.imgUrl} \n                content={this.props.content}>\n                </ModalContent>\n            </Modal>\n            </div>\n      )\n    }\n  }\n\n  export default GridItem;"]},"metadata":{},"sourceType":"module"}